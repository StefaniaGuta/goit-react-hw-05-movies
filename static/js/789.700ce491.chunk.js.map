{"version":3,"file":"static/js/789.700ce491.chunk.js","mappings":"uTAoFA,EA3EwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAuCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAYF,EAAA,GAAEG,EAAcH,EAAA,GACnCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACExB,GAASyB,EAAAA,EAAAA,OAAyB,KAAD,EAA7CJ,EAAGC,EAAAI,KACTnB,EAAec,EAAIM,QAAQC,SAC3Bb,EAAa,UAAU,wBAAAO,EAAAO,OAAA,GAAAT,EAAA,KACxB,kBAJc,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAMTC,EAAS,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,IAAA,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAAgB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACExB,GAASoC,EAAAA,EAAAA,MAAyB,KAAD,EAA7Cf,EAAGc,EAAAT,KACTf,EAAgBU,EAAIM,QAAQC,SAC5Bb,EAAa,UAAU,wBAAAoB,EAAAN,OAAA,GAAAK,EAAA,KACxB,kBAJc,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAMDM,GAAwBC,EAAAA,EAAAA,GAAS,CAC7CC,SAAU,CAAC,yBACXC,QAASR,IAFHS,KAKR,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,wBAAuBC,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,iBAC7BC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAAS/B,EAAU4B,SAAC,YAG1CC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAASf,EAAUY,SAAC,eAK5CF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qBAAoBC,SAAA,CACjB,WAAd9B,GACCR,EACC0C,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAW,IACzBC,KAAI,SAACF,GAAC,OACLJ,EAAAA,EAAAA,KAAA,MAAAD,UACAF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,OAAOU,GAAE,WAAAC,OAAaL,EAAEM,IAAKX,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYR,EAAEC,YACnBQ,IAAKT,EAAEU,OAASV,EAAEW,QAEpBf,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEK,EAAEU,OAASV,EAAEW,WANlCX,EAAEM,GAQN,IAGRlB,GACa,WAAdvB,GACEJ,EACCsC,QAAO,SAAAa,GAAC,OAAIA,EAAEX,WAAW,IACzBC,KAAI,SAACU,GAAC,OACLhB,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,OAAOU,GAAE,OAAAC,OAASO,EAAEN,IAAKX,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYI,EAAEX,YACnBQ,IAAKG,EAAEF,OAASE,EAAED,QAEpBf,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEiB,EAAEF,OAASE,EAAED,aAPtCC,EAAEN,GAUN,SAKjB,ECmHA,EAxLa,WACX,IAAArD,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC4D,EAAM1D,EAAA,GAAE2D,EAAS3D,EAAA,GACxBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCwD,EAAMvD,EAAA,GAAEwD,EAASxD,EAAA,GAClBT,GAAWC,EAAAA,EAAAA,MACXiE,GAAeC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAS,OAALA,QAAK,IAALA,OAAK,EAALA,EAAON,OAAOI,aAAatC,OAAO,KAAK,IAEjFyC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAArD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAA,OAAAzD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOxB,GAASgB,EAAAA,EAAAA,OAAa,KAAD,EAAtCuD,EAAQjD,EAAAI,KACR8C,EAAYD,EAAS5C,QAAQC,QAE7B6C,EAAe,GAAEC,GAAAG,EAAAA,EAAAA,GACPL,GAASlD,EAAAC,KAAA,EAAAmD,EAAAb,IAAA,WAAAc,EAAAD,EAAAI,KAAAC,KAAC,CAADzD,EAAAE,KAAA,SAAb,OAADyB,EAAC0B,EAAAK,MAAA1D,EAAAE,KAAA,GACoBxB,GAASiF,EAAAA,EAAAA,IAAgBhC,EAAEM,KAAK,KAAD,GAAvDqB,EAAetD,EAAAI,KACrB+C,EAAaS,KAAKN,EAAgBjD,SAAS,QAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA6D,GAAA7D,EAAA,SAAAoD,EAAAU,EAAA9D,EAAA6D,IAAA,eAAA7D,EAAAC,KAAA,GAAAmD,EAAAW,IAAA/D,EAAAgE,OAAA,YAG7CvB,EAAUU,GAAcnD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiE,GAAAjE,EAAA,SAExBkE,QAAQC,MAAM,kCAAiCnE,EAAAiE,IAAS,yBAAAjE,EAAAO,OAAA,GAAAT,EAAA,gCAE3D,kBAfgB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAgBjBuC,GACF,GAAG,CAACtE,IAEJ,IAAM0F,EAAgB,SAACC,GACrB,IAAKA,GAAWA,GAAW,EAAG,MAAO,MACrC,IAAMC,EAAIC,KAAKC,MAAMH,EAAU,IACzB1C,EAAI0C,EAAU,GACpB,MAAM,GAANrC,OAAUsC,EAAC,MAAAtC,OAAKL,EAAC,IACnB,EAUA,OARAoB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAW,eAAA9D,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,IAAA,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAAgB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACAxB,GAASgG,EAAAA,EAAAA,OAAkB,KAAD,EAAtC3E,EAAGc,EAAAT,KACTuC,EAAU5C,EAAIM,SAAQ,wBAAAQ,EAAAN,OAAA,GAAAK,EAAA,KACvB,kBAHgB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAIjBgE,GACF,GAAG,CAAC/F,KAGF0C,EAAAA,EAAAA,MAAA,WAASC,UAAU,cAAaC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,sBAC7BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qBAAoBC,SAAA,CACjCsB,EAAgBA,EAAalB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAW,IACtD+C,MAAM,EAAG,GACT9C,KAAI,SAAA+C,GAAK,OACRrD,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAAvD,UACAC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,cAAcU,GAAE,WAAAC,OAAa4C,EAAM3C,IAAKX,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYyC,EAAMhD,YACvBQ,IAAKwC,EAAMvC,OAASuC,EAAMtC,QAE5BlB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEsD,EAAMvC,OAASuC,EAAMtC,QACjDf,EAAAA,EAAAA,KAAA,QAAAD,SAAOsD,EAAME,sBARRF,EAAM3C,KAaZ,KACGV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,QACXC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,oBAAoBG,KAAK,SAAQF,SAAC,kBAItDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,uBAC7BC,EAAAA,EAAAA,KAAA,KAAGwD,KAAK,OAAMzD,SAAC,wBAEjBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACzBkB,EACAd,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAW,IACzBoD,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEC,aAAeF,EAAEE,YAAY,IAC9CR,MAAM,EAAG,GACT9C,KAAI,SAAA+C,GAAK,OAERrD,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,kBAAkBU,GAAE,WAAAC,OAAa4C,EAAM3C,IAAKX,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYyC,EAAMhD,YACvBQ,IAAKwC,EAAMvC,OAASuC,EAAMtC,QAE5BlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,QAAMgE,MAAO,CAACC,WAAY,UAAU/D,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKW,I,ycAAWE,IAAI,YACnBgC,EAAcQ,EAAMU,aAEvBlE,EAAAA,EAAAA,MAAA,QAAMgE,MAAO,CAACC,WAAY,kBAAkB/D,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAKW,IAAKqD,EAAMnD,IAAI,iBACnBwC,EAAMO,aAAaK,QAAQ,UAGhCpE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEsD,EAAMvC,OAASuC,EAAMtC,QACjDf,EAAAA,EAAAA,KAAA,MAAAD,SACGsD,EAAMa,OACNd,MAAM,EAAG,GACT9C,KAAI,SAAA6D,GAAG,OACNnE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAeoE,EAAIpD,MAAboD,EAAIzD,GAAmB,aAtBxD2C,EAAM3C,GA2BV,UAKXb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,0BAC7BC,EAAAA,EAAAA,KAAA,KAAGwD,KAAK,OAAMzD,SAAC,wBAEjBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAC5BsB,EAAalB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAW,IACtCoD,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEC,aAAeF,EAAEE,YAAY,IAC9CR,MAAM,EAAG,GACT9C,KAAI,SAAA+C,GAAK,OACRrD,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAAvD,UACAC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,kBAAkBU,GAAE,WAAAC,OAAa4C,EAAM3C,IAAKX,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYyC,EAAMhD,YACvBQ,IAAKwC,EAAMvC,OAASuC,EAAMtC,QAE5Bf,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEsD,EAAMvC,OAASuC,EAAMtC,WAN5CsC,EAAM3C,KASZ,UAKTb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,0BAC7BC,EAAAA,EAAAA,KAAA,KAAGwD,KAAK,OAAMzD,SAAC,wBAEnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAC5BoB,EAAOhB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAW,IAChCoD,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAES,WAAaV,EAAEU,UAAU,IAC1ChB,MAAM,EAAG,GACT9C,KAAI,SAAAU,GAAC,OACJhB,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAAvD,UACAC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAU,kBAAkBU,GAAE,OAAAC,OAASO,EAAEN,IAAKX,SAAA,EAClDC,EAAAA,EAAAA,KAAA,OACEW,IAAKC,EAAAA,GAAYI,EAAEX,YACnBQ,IAAKG,EAAEF,OAASE,EAAED,QAEpBlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEiB,EAAEF,OAASE,EAAED,QACzClB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,UAAQiB,EAAEqD,oBAAoBC,wBARvDtD,EAAEN,KAYR,UAKTb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAAU0D,KAAK,OAAMzD,SAAC,qBACnCC,EAAAA,EAAAA,KAACuE,EAAe,SAIxB,C","sources":["components/Recommendations/Recommendations.jsx","components/Home/Home.jsx"],"sourcesContent":["import {moviesRecommendations, IMAGE_URL} from '../../redux/movies/getAPI';\nimport {seriesRecommendations} from '../../redux/series/seriesApi';\nimport { useDispatch } from 'react-redux';\nimport { useState  } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Link } from 'react-router-dom';\n\nimport './Recommendations.css';\n\nconst Recommendations = () => {\n  const dispatch = useDispatch();\n  const [recommMovies, setRecommMovie] = useState([]);\n  const [recommSeries, setRecommSeries] = useState([]);\n  const [activeTab, setActiveTab] = useState(null);\n\n  const getMovies = async () => {\n    const res = await dispatch(moviesRecommendations());\n    setRecommMovie(res.payload.results);\n    setActiveTab(\"movies\");\n  };\n\n  const getSeries = async () => {\n    const res = await dispatch(seriesRecommendations());\n    setRecommSeries(res.payload.results);\n    setActiveTab(\"series\");\n  };\n\n  const { data: recommandedSeries,  } = useQuery({\n    queryKey: ['seriesRecommendations'],\n    queryFn: getSeries\n});\n\n  return (\n    <section className='RecommendationSection'>\n      <div className='title_filters'>\n        <h2 className='sectionTitle'>Recommended</h2>\n        <button type=\"button\" onClick={getMovies}>\n          Movies\n        </button>\n        <button type=\"button\" onClick={getSeries}>\n          Series\n        </button>\n      </div>\n\n      <ul className='recommendationList'>\n        {activeTab === \"movies\" &&\n          recommMovies\n          .filter(m => m.poster_path)\n          .map((m) => (\n            <li key={m.id}>\n            <Link className=\"Item\" to={`/movies/${m.id}`}>\n              <img\n                src={IMAGE_URL + m.poster_path}\n                alt={m.title || m.name}\n              />\n              <h2 className='movieTitle'>{m.title || m.name}</h2>\n            </Link>\n            </li>\n          ))}\n\n        {recommandedSeries &&\n        activeTab === \"series\" &&\n          recommSeries\n          .filter(s => s.poster_path)\n          .map((s) => (\n            <li key={s.id}>\n              <Link className=\"Item\" to={`/tv/${s.id}`}>\n                <img\n                  src={IMAGE_URL + s.poster_path}\n                  alt={s.title || s.name}\n                />\n                <div className='titleSection'>\n                  <h2 className='movieTitle'>{s.title || s.name}</h2>\n                </div>\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </section >\n  );\n};\n\n\n\nexport default Recommendations;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getMovies, IMAGE_URL, getMovieDetails } from '../../redux/movies/getAPI';\nimport { newSeriesFetch } from '../../redux/series/seriesApi';\nimport {useDispatch, useSelector} from 'react-redux';\nimport time from '../Images/time.png';\nimport star from '../Images/star.png';\nimport Recommendations from '../Recommendations/Recommendations';\nimport './Home.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const dispatch = useDispatch();\n  const recentMovies = useSelector(state => state?.movies.recentMovies.results) || [];\n\n  useEffect(() => { \n    const fetchMovies = async () => {\n      try {\n        const response = await dispatch(getMovies());\n        const allMovies = response.payload.results;\n        \n        const detailsArray = [];\n        for (const m of allMovies) {\n          const detailsResponse = await dispatch(getMovieDetails(m.id));\n          detailsArray.push(detailsResponse.payload);\n        }\n\n        setMovies(detailsArray);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [dispatch]);\n\n  const formatRuntime = (minutes) => {\n    if (!minutes || minutes <= 0) return \"N/A\";\n    const h = Math.floor(minutes / 60);\n    const m = minutes % 60;\n    return `${h}h ${m}m`;\n  };\n\n  useEffect(() => {\n    const fetchSeries = async () => {\n      const res = await dispatch(newSeriesFetch());\n      setSeries(res.payload)\n    }\n    fetchSeries();\n  }, [dispatch])\n\n  return (\n    <section className=\"homeSection\">\n      <div className=\"recentlyUpdatesContainer\">\n        <h2 className='sectionTitle'>Recently Updated</h2>\n        <ul className='recentryMoviesList'>\n        {recentMovies ? (recentMovies.filter(m => m.poster_path)\n        .slice(0, 5)\n        .map(movie => (\n          <>\n          <li key={movie.id}>\n            <Link className=\"recentMovie\" to={`/movies/${movie.id}`}>\n              <img\n                src={IMAGE_URL + movie.poster_path}\n                alt={movie.title || movie.name}\n              />\n              <div>\n              <h2 className='movieTitle'>{movie.title || movie.name}</h2>\n              <span>{movie.release_date}</span>\n              </div>\n            </Link>\n          </li>\n          \n          </>\n        )) ) : (<p>no</p>)}\n        <button className='recentMovieButton' type='button'>&#10230;</button>\n      </ul>\n      </div>\n\n      <div className='trendingContainer'>\n        <span className='title_viewAll'>\n          <h2 className='sectionTitle'>In trending today</h2>\n          <a href='home'>View all &#10230;</a>\n        </span>\n        <ul className=\"trendingList\">\n          {movies\n          .filter(m => m.poster_path)\n          .sort((a, b) => b.vote_average - a.vote_average)\n          .slice(0, 4)\n          .map(movie => (\n           \n            <li key={movie.id}>\n              <Link className='movieInTrending' to={`/movies/${movie.id}`}>\n                <img\n                  src={IMAGE_URL + movie.poster_path}\n                  alt={movie.title || movie.name}\n                />\n                <div className='runtime_vote'>\n                  <span style={{alignItems: \"center\"}}>\n                    <img src={time} alt='a clock'/>\n                    {formatRuntime(movie.runtime)}\n                  </span>\n                  <span style={{alignItems: \"first baseline\"}}>\n                    <img src={star} alt='a white star'/>\n                    {movie.vote_average.toFixed(1)}\n                  </span>\n                </div>\n                <div className='titleSection'>\n                  <h2 className='movieTitle'>{movie.title || movie.name}</h2>\n                  <ul>\n                    {movie.genres\n                    .slice(0, 2)\n                    .map(gen => (\n                      <li className='movieGenre' key={gen.id}>{gen.name}</li>\n                    ))}\n                  </ul>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>  \n\n      <div className='newReleasedContainer'>\n        <span className='title_viewAll'>\n          <h2 className='sectionTitle'>New Release - Movies</h2>\n          <a href='home'>View all &#10230;</a>\n        </span>\n        <ul className='newReleasedList'>\n          {recentMovies.filter(m => m.poster_path)\n          .sort((a, b) => b.vote_average - a.vote_average)\n          .slice(0, 4)\n          .map(movie => (\n            <>\n            <li key={movie.id}>\n              <Link className=\"newReleasedItem\" to={`/movies/${movie.id}`}>\n                <img\n                  src={IMAGE_URL + movie.poster_path}\n                  alt={movie.title || movie.name}\n                />\n                <h2 className='movieTitle'>{movie.title || movie.name}</h2>\n              </Link>\n            </li>\n            </>\n          ))}\n        </ul>\n      </div>    \n      \n      <div className='newReleasedContainer'>\n          <span className='title_viewAll'>\n            <h2 className='sectionTitle'>New Release - Series</h2>\n            <a href='home'>View all &#10230;</a>\n        </span>\n        <ul className='newReleasedList'>\n          {series.filter(m => m.poster_path)\n          .sort((a, b) => b.popularity - a.popularity)\n          .slice(0, 4)\n          .map(s => (\n            <>\n            <li key={s.id}>\n              <Link className=\"newReleasedItem\" to={`/tv/${s.id}`}>\n                <img\n                  src={IMAGE_URL + s.poster_path}\n                  alt={s.title || s.name}\n                />\n                <div className='titleSection'>\n                  <h2 className='movieTitle'>{s.title || s.name}</h2>\n                  <p className='seasonNumber'>Season {s.last_episode_to_air.season_number}</p>\n                </div>\n              </Link>\n            </li>\n            </>\n          ))}\n        </ul>\n      </div>\n\n      <div className='RecommendationContainer'>\n        <a className='viewAll' href='home'>View all &#10230;</a>\n        <Recommendations/>\n      </div>\n    </section>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","recommMovies","setRecommMovie","_useState3","_useState4","recommSeries","setRecommSeries","_useState5","_useState6","activeTab","setActiveTab","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","moviesRecommendations","sent","payload","results","stop","apply","arguments","getSeries","_ref2","_callee2","_context2","seriesRecommendations","recommandedSeries","useQuery","queryKey","queryFn","data","_jsxs","className","children","_jsx","type","onClick","filter","m","poster_path","map","Link","to","concat","id","src","IMAGE_URL","alt","title","name","s","movies","setMovies","series","setSeries","recentMovies","useSelector","state","useEffect","fetchMovies","response","allMovies","detailsArray","_iterator","_step","detailsResponse","_createForOfIteratorHelper","n","done","value","getMovieDetails","push","t0","e","f","finish","t1","console","error","formatRuntime","minutes","h","Math","floor","fetchSeries","newSeriesFetch","slice","movie","_Fragment","release_date","href","sort","a","b","vote_average","style","alignItems","runtime","star","toFixed","genres","gen","popularity","last_episode_to_air","season_number","Recommendations"],"sourceRoot":""}