{"version":3,"file":"static/js/115.cb3d1dbd.chunk.js","mappings":"+NAgEA,UApDe,WAAO,IAADA,EACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAYF,EAASG,SAASC,MAAM,KACpCC,EAAmBH,EAAUA,EAAUI,OAAS,GAChDC,GAAyB,QAAdR,EAAAC,EAASQ,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,OAAQJ,GAAoB,UAEvDK,EACS,YAAbH,EAAyBI,EAAAA,GACZ,eAAbJ,EAA4BK,EAAAA,GACf,oBAAbL,EAAiCM,EAAAA,GACpB,kBAAbN,EAA+BO,EAAAA,GAClB,qBAAbP,EAAkCQ,EAAAA,GACrB,mBAAbR,EAAgCS,EAAAA,GACnB,mBAAbT,EAAgCU,EAAAA,GAChCL,EAAAA,GAEFM,GAAoDC,EAAAA,EAAAA,GAAkBT,EAAaH,GAArEa,EAAMF,EAAZG,KAAcC,EAAUJ,EAAVI,WAAYC,EAAIL,EAAJK,KAAMC,EAAON,EAAPM,QAExC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,MAAA,WAASG,UAAU,OAAMD,SAAA,EACvBF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,eAAcD,SAAA,CAAC,YAAUpB,EAASsB,kBAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,WAAUD,SACrBP,EAAOW,KAAI,SAACC,GAAK,OACZP,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CACHC,GAAE,UAAAC,OAAYH,EAAMI,IAEpBR,UAAU,WAAUD,SAAA,EAEpBG,EAAAA,EAAAA,KAAA,OACEO,IAAKC,EAAAA,GAAYN,EAAMO,YACvBC,IAAKR,EAAMS,OAAST,EAAMU,QAE5BZ,EAAAA,EAAAA,KAAA,MAAAH,SAAKK,EAAMS,OAAST,EAAMU,SAPrBV,EAAMI,GAQN,SAOhBd,EAAa,GACZQ,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CACTC,YAAarB,EACbD,WAAYA,EACZuB,aAAcrB,IAEV,OAGZ,C,mEC7DA,EAA6B,+BAA7B,EAAqE,2B,SCoErE,EAlEmB,SAAHsB,GAAmD,IAA7CF,EAAWE,EAAXF,YAAatB,EAAUwB,EAAVxB,WAAYuB,EAAYC,EAAZD,aAmBvCE,EAhBiB,WACrB,IAAIC,EAAQC,KAAKC,IAAI,EAAGN,EAAcK,KAAKE,MAAMC,MAC7CC,EAAML,EAJW,EAIc,EAE/BK,EAAM/B,IACR+B,EAAM/B,EACN0B,EAAQC,KAAKC,IAAI,EAAGG,EARD,EAQwB,IAI7C,IADA,IAAIC,EAAQ,GACHC,EAAIP,EAAOO,GAAKF,EAAKE,IAC5BD,EAAME,KAAKD,GAEb,OAAOD,CACT,CAEoBG,GAEpB,OACEhC,EAAAA,EAAAA,MAAA,OAAKG,UAAW8B,EAAkB/B,SAAA,EAChCG,EAAAA,EAAAA,KAAA,UACE6B,SAA0B,IAAhBf,EACVgB,QAAS,kBAAMf,EAAa,EAAE,EAAClB,SAChC,kBAIDG,EAAAA,EAAAA,KAAA,UACE6B,SAA0B,IAAhBf,EACVgB,QAAS,kBAAMf,EAAaD,EAAc,EAAE,EAACjB,SAC9C,gBAIAoB,EAAY,GAAK,IAAKjB,EAAAA,EAAAA,KAAA,QAAAH,SAAM,QAC5BoB,EAAYhB,KAAI,SAAC8B,GAAG,OACnB/B,EAAAA,EAAAA,KAAA,UAEEF,UAAWiC,IAAQjB,EAAcc,EAAgB,GACjDE,QAAS,kBAAMf,EAAagB,EAAI,EAAClC,SAEhCkC,GAJIA,EAKE,IAEVd,EAAYA,EAAYzC,OAAS,GAAKgB,IAAcQ,EAAAA,EAAAA,KAAA,QAAAH,SAAM,SAE3DG,EAAAA,EAAAA,KAAA,UACE6B,SAAUf,IAAgBtB,EAC1BsC,QAAS,kBAAMf,EAAaD,EAAc,EAAE,EAACjB,SAC9C,iBAIDG,EAAAA,EAAAA,KAAA,UACE6B,SAAUf,IAAgBtB,EAC1BsC,QAAS,kBAAMf,EAAavB,EAAW,EAACK,SACzC,kBAKP,C,gIChEaR,EAAoB,SAACT,GAA2C,IAA9BH,EAAQuD,UAAAxD,OAAA,QAAAyD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAAIF,UAAAxD,OAAA,QAAAyD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACnEG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7B5C,EAAI8C,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAxChD,EAAUiD,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAAwBP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA5BlD,EAAImD,EAAA,GAAElD,EAAOkD,EAAA,GACdC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,eAAAhC,GAAAiC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESV,EAASjE,EAAYa,EAAMhB,IAAW,KAAD,EAAtD2E,EAAQC,EAAAG,KACdjB,EAAQa,EAASK,QAAQC,SAAW,IACpChB,EAAcU,EAASK,QAAQE,aAAe,GAAGN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjDQ,QAAQC,MAAM,iCAAgCT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAE1D,kBARc,OAAAnC,EAAAgD,MAAA,KAAAhC,UAAA,KAUfgB,GAEF,GAAE,CAAEH,EAAUpD,EAAMb,EAAaH,GAAQ4B,QAAA4D,EAAAA,EAAAA,GAAK/B,KAEvC,CAAE3C,KAAAA,EAAMC,WAAAA,EAAYC,KAAAA,EAAMC,QAAAA,EACnC,C","sources":["components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/Pagination/usePaginatedFetch.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { usePaginatedFetch } from \"../Pagination/usePaginatedFetch\";\nimport { getAll, getTrendingAll, IMAGE_URL, theNewRealedMovie,\n  getPopularMovies,\n  getNowPlayingMovies,\n  getUpcomingMovies,\n  getTopRatedMovies\n } from \"../../redux/movies/getAPI\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport \"../pages/MovieByGenPage/MovieByGenPage.css\";\n\nconst Movies = () => {\n  const location = useLocation();\n  const pathParts = location.pathname.split('/');\n  const categoryFromPath = pathParts[pathParts.length - 1]; \n  const category = location.state?.type || categoryFromPath || \"popular\";\n\n  const fetchAction =\n    category === \"popular\" ? getTrendingAll :\n    category === \"inTrending\" ? getAll :\n    category === \"newReleaseMovie\" ? theNewRealedMovie :\n    category === \"popularMovies\" ? getPopularMovies :\n    category === \"nowPlayingMovies\" ? getNowPlayingMovies :\n    category === \"upcomingMovies\" ? getUpcomingMovies :\n    category === \"topRatedMovies\" ? getTopRatedMovies :\n    getAll;\n\n  const { data: movies, totalPages, page, setPage } = usePaginatedFetch(fetchAction, category);\n\n  return (\n    <>\n    <section className=\"page\">\n      <h1 className=\"sectionTitle\">Movies - {category.toLowerCase()}</h1>\n      <ul className=\"pageList\">\n        {movies.map((movie) => (\n              <Link \n                to={`/movie/${movie.id}`} \n                key={movie.id}\n                className=\"pageItem\"\n              >\n                <img\n                  src={IMAGE_URL + movie.poster_path}\n                  alt={movie.title || movie.name}\n                  />\n                <h2>{movie.title || movie.name}</h2>\n              </Link>\n          )\n        )}\n      </ul>\n\n      \n    </section>\n    {totalPages > 1 ? (\n      <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        onPageChange={setPage}\n        />\n        ) : null}\n        </>\n      );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"active\":\"Pagination_active__DDld0\"};","import React from \"react\";\nimport styles from \"./Pagination.module.css\";\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const maxPagesToShow = 5;\n\n  const getPageNumbers = () => {\n    let start = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n    let end = start + maxPagesToShow - 1;\n\n    if (end > totalPages) {\n      end = totalPages;\n      start = Math.max(1, end - maxPagesToShow + 1);\n    }\n\n    let pages = [];\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={styles.pagination}>\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        ⏮ First\n      </button>\n\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        ◀ Prev\n      </button>\n\n      {pageNumbers[0] > 1 && <span>...</span>}\n      {pageNumbers.map((num) => (\n        <button \n          key={num}\n          className={num === currentPage ? styles.active : \"\"}\n          onClick={() => onPageChange(num)}\n        >\n          {num}\n        </button>\n      ))}\n      {pageNumbers[pageNumbers.length - 1] < totalPages && <span>...</span>}\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next ▶\n      </button>\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(totalPages)}\n      >\n        Last ⏭\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport const usePaginatedFetch = (fetchAction, category = \"\", deps = []) => {\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    \n    const fetchData = async () => {\n      try {\n        const response = await dispatch(fetchAction(page, category));\n        setData(response.payload.results || []);\n        setTotalPages(response.payload.total_pages || 1);\n      } catch (error) {\n        console.error(\"Error fetching paginated data:\", error);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, page, fetchAction, category, ...deps]);\n\n  return { data, totalPages, page, setPage };\n};\n"],"names":["_location$state","location","useLocation","pathParts","pathname","split","categoryFromPath","length","category","state","type","fetchAction","getTrendingAll","getAll","theNewRealedMovie","getPopularMovies","getNowPlayingMovies","getUpcomingMovies","getTopRatedMovies","_usePaginatedFetch","usePaginatedFetch","movies","data","totalPages","page","setPage","_jsxs","_Fragment","children","className","toLowerCase","_jsx","map","movie","Link","to","concat","id","src","IMAGE_URL","poster_path","alt","title","name","Pagination","currentPage","onPageChange","_ref","pageNumbers","start","Math","max","floor","maxPagesToShow","end","pages","i","push","getPageNumbers","styles","disabled","onClick","num","arguments","undefined","deps","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setTotalPages","_useState5","_useState6","dispatch","useDispatch","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","payload","results","total_pages","t0","console","error","stop","apply","_toConsumableArray"],"sourceRoot":""}