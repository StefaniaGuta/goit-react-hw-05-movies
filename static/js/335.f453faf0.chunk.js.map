{"version":3,"file":"static/js/335.f453faf0.chunk.js","mappings":"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","sources":["components/Movies/Movies.jsx","components/Pagination/usePaginatedFetch.js","webpack://react-homework-template/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { usePaginatedFetch } from \"../Pagination/usePaginatedFetch\";\nimport { getAll, getTrendingAll, IMAGE_URL, theNewRealedMovie } from \"../../redux/movies/getAPI\";\nimport Pagination from \"components/Pagination/Pagination\";\n//import { noImage } from \"../Images/no_image.jpg\";\nimport \"./Movies.css\";\n\nconst Movies = () => {\n  const location = useLocation();\n  const category = location.state?.type || \"popular\";\n\n  const fetchAction =\n    category === \"popular\" ? getTrendingAll :\n    category === \"inTrending\" ? getAll :\n    category === \"newReleaseMovie\" ? theNewRealedMovie :\n    getAll;\n\n  const { data: movies, totalPages, page, setPage } = usePaginatedFetch(fetchAction, category);\n  return (\n    <>\n    <section className=\"moviesPage\">\n      <h1 className=\"sectionTitle\">Movies - {category.toUpperCase()}</h1>\n      <ul className=\"moviesList\">\n        {movies.map((movie) => (\n          <li\n          key={movie.id}\n          className=\"movieItem\"\n          >\n              <Link to={`/movies/${movie.id}`}>\n                <img\n                  src={IMAGE_URL + movie.poster_path}\n                  alt={movie.title || movie.name}\n                  />\n                <h2>{movie.title || movie.name}</h2>\n              </Link>\n            </li>\n          )\n        )}\n      </ul>\n\n      \n    </section>\n\n  <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        onPageChange={setPage}\n        />\n        </>\n      );\n};\n\nexport default Movies;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport const usePaginatedFetch = (fetchAction, category = \"\", deps = []) => {\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await dispatch(fetchAction(page, category));\n        setData(response.payload.results || []);\n        setTotalPages(response.payload.total_pages || 1);\n      } catch (error) {\n        console.error(\"Error fetching paginated data:\", error);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, page, ...deps]);\n\n  return { data, totalPages, page, setPage };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"active\":\"Pagination_active__DDld0\"};","import React from \"react\";\nimport styles from \"./Pagination.module.css\";\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const maxPagesToShow = 5;\n\n  const getPageNumbers = () => {\n    let start = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n    let end = start + maxPagesToShow - 1;\n\n    if (end > totalPages) {\n      end = totalPages;\n      start = Math.max(1, end - maxPagesToShow + 1);\n    }\n\n    let pages = [];\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={styles.pagination}>\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        ⏮ First\n      </button>\n\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        ◀ Prev\n      </button>\n\n      {pageNumbers[0] > 1 && <span>...</span>}\n      {pageNumbers.map((num) => (\n        <button \n          key={num}\n          className={num === currentPage ? styles.active : \"\"}\n          onClick={() => onPageChange(num)}\n        >\n          {num}\n        </button>\n      ))}\n      {pageNumbers[pageNumbers.length - 1] < totalPages && <span>...</span>}\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next ▶\n      </button>\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(totalPages)}\n      >\n        Last ⏭\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["_location$state","category","useLocation","state","type","_usePaginatedFetch","fetchAction","arguments","length","undefined","deps","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","page","setPage","dispatch","useDispatch","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","payload","results","total_pages","t0","console","error","stop","apply","concat","_toConsumableArray","usePaginatedFetch","getTrendingAll","getAll","theNewRealedMovie","movies","_jsxs","_Fragment","children","className","toUpperCase","_jsx","map","movie","Link","to","id","src","IMAGE_URL","poster_path","alt","title","name","Pagination","currentPage","onPageChange","pageNumbers","start","Math","max","floor","maxPagesToShow","end","pages","i","push","getPageNumbers","styles","disabled","onClick","num"],"sourceRoot":""}