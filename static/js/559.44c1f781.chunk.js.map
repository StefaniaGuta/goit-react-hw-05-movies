{"version":3,"file":"static/js/559.44c1f781.chunk.js","mappings":"mLACA,EAA6B,+BAA7B,EAAqE,2B,SCoErE,EAlEmB,SAAHA,GAAmD,IAA7CC,EAAWD,EAAXC,YAAaC,EAAUF,EAAVE,WAAYC,EAAYH,EAAZG,aAmBvCC,EAhBiB,WACrB,IAAIC,EAAQC,KAAKC,IAAI,EAAGN,EAAcK,KAAKE,MAAMC,MAC7CC,EAAML,EAJW,EAIc,EAE/BK,EAAMR,IACRQ,EAAMR,EACNG,EAAQC,KAAKC,IAAI,EAAGG,EARD,EAQwB,IAI7C,IADA,IAAIC,EAAQ,GACHC,EAAIP,EAAOO,GAAKF,EAAKE,IAC5BD,EAAME,KAAKD,GAEb,OAAOD,CACT,CAEoBG,GAEpB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UACEC,SAA0B,IAAhBnB,EACVoB,QAAS,kBAAMlB,EAAa,EAAE,EAACe,SAChC,kBAIDC,EAAAA,EAAAA,KAAA,UACEC,SAA0B,IAAhBnB,EACVoB,QAAS,kBAAMlB,EAAaF,EAAc,EAAE,EAACiB,SAC9C,gBAIAd,EAAY,GAAK,IAAKe,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QAC5Bd,EAAYkB,KAAI,SAACC,GAAG,OACnBJ,EAAAA,EAAAA,KAAA,UAEEH,UAAWO,IAAQtB,EAAcgB,EAAgB,GACjDI,QAAS,kBAAMlB,EAAaoB,EAAI,EAACL,SAEhCK,GAJIA,EAKE,IAEVnB,EAAYA,EAAYoB,OAAS,GAAKtB,IAAciB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SAE3DC,EAAAA,EAAAA,KAAA,UACEC,SAAUnB,IAAgBC,EAC1BmB,QAAS,kBAAMlB,EAAaF,EAAc,EAAE,EAACiB,SAC9C,iBAIDC,EAAAA,EAAAA,KAAA,UACEC,SAAUnB,IAAgBC,EAC1BmB,QAAS,kBAAMlB,EAAaD,EAAW,EAACgB,SACzC,kBAKP,C,kKCOA,UAhEuB,WACrB,IAAAO,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBI,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAcC,SAASH,EAAaI,IAAI,UAAY,EAC1DC,GAAwBf,EAAAA,EAAAA,UAASY,GAAYI,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAAtCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCnB,EAAAA,EAAAA,UAAS,GAAEoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAAxC3C,EAAU4C,EAAA,GAAEC,EAAaD,EAAA,GAC1BE,GAASC,EAAAA,EAAAA,MACTC,EAAQF,EAAOE,MACfC,EAAYH,EAAOI,SAEzBC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAW,eAAAtD,GAAAuD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOjC,GAASkC,EAAAA,EAAAA,IAAOtB,IAAO,KAAD,EAAvCe,EAAQI,EAAAI,KACRP,EAAYD,EAASS,QAAQC,QAE7BR,EAAgBrB,SAASW,GAEzBW,EAAiBF,EAAUU,QAAO,SAAAC,GAAK,OAC3CA,EAAMC,UAAUC,SAASZ,EAAc,IAGzC9B,EAAU+B,GACVd,EAAcW,EAASS,QAAQM,aAAaX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAE5Ca,QAAQC,MAAM,kCAAiCd,EAAAY,IAAS,yBAAAZ,EAAAe,OAAA,GAAApB,EAAA,mBAE3D,kBAhBgB,OAAAzD,EAAA8E,MAAA,KAAAC,UAAA,KAkBjBzB,GACF,GAAG,CAACvB,EAAUY,EAAMO,IASlB,OACEnC,EAAAA,EAAAA,MAAA,WAASC,UAAU,OAAME,SAAA,EACvBH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAK,cAAYiC,MACjBhC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,WAAUE,SACrBW,EAAOP,KAAI,SAAAgD,GAAK,OACbvD,EAAAA,EAAAA,MAACiE,EAAAA,GAAI,CAAChE,UAAU,WAA0BiE,GAAE,UAAAC,OAAYZ,EAAMa,IAAKjE,SAAA,EACjEC,EAAAA,EAAAA,KAAA,OACEiE,IAAKd,EAAMe,aAAef,EAAMe,YAAcC,EAAAA,GAAYhB,EAAMe,YAAcE,EAC9EC,IAAKlB,EAAMmB,OAASnB,EAAMoB,QAE5BvE,EAAAA,EAAAA,KAAA,MAAAD,SAAKoD,EAAMmB,OAASnB,EAAMoB,SALIpB,EAAMa,GAM/B,OAIbhE,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,CACT1F,YAAa0C,EACbzC,WAAYA,EACZC,aAzBmB,SAACyF,GACxBhD,EAAQgD,GACRvD,EAAgB,CAAEM,KAAMiD,GAC1B,MA0BF,C","sources":["webpack://react-homework-template/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/pages/MovieByGenPage/MovieByGenPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"active\":\"Pagination_active__DDld0\"};","import React from \"react\";\nimport styles from \"./Pagination.module.css\";\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const maxPagesToShow = 5;\n\n  const getPageNumbers = () => {\n    let start = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n    let end = start + maxPagesToShow - 1;\n\n    if (end > totalPages) {\n      end = totalPages;\n      start = Math.max(1, end - maxPagesToShow + 1);\n    }\n\n    let pages = [];\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={styles.pagination}>\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        ⏮ First\n      </button>\n\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        ◀ Prev\n      </button>\n\n      {pageNumbers[0] > 1 && <span>...</span>}\n      {pageNumbers.map((num) => (\n        <button \n          key={num}\n          className={num === currentPage ? styles.active : \"\"}\n          onClick={() => onPageChange(num)}\n        >\n          {num}\n        </button>\n      ))}\n      {pageNumbers[pageNumbers.length - 1] < totalPages && <span>...</span>}\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next ▶\n      </button>\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(totalPages)}\n      >\n        Last ⏭\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getAll, IMAGE_URL } from '../../../redux/movies/getAPI';\nimport { useDispatch } from 'react-redux';\nimport Pagination from '../../Pagination/Pagination';\nimport noImage from '../../Images/no_image.jpg';\nimport { useParams } from 'react-router-dom';\nimport './MovieByGenPage.css';\n\n\nconst MovieByGenPage = () => {\n  const [movies, setMovies] = useState([]);\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pageFromUrl = parseInt(searchParams.get(\"page\")) || 1;\n  const [page, setPage] = useState(pageFromUrl);\n  const [totalPages, setTotalPages] = useState(1);\n  const params = useParams();\n  const genId = params.genId;\n  const genreName = params.genName;\n\n  useEffect(() => {\n  const fetchMovies = async () => {\n    try {\n      const response = await dispatch(getAll(page));\n      const allMovies = response.payload.results;\n\n      const genreIdNumber = parseInt(genId);\n\n      const filteredMovies = allMovies.filter(movie =>\n        movie.genre_ids.includes(genreIdNumber)\n      );\n\n      setMovies(filteredMovies);\n      setTotalPages(response.payload.total_pages);\n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n    }\n  };\n\n  fetchMovies();\n}, [dispatch, page, genId]);\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n    setSearchParams({ page: newPage });\n  };\n\n\n\n  return (\n    <section className='page'>\n      <h1 >Movie gen: {genreName}</h1>\n      <ul className='pageList'>\n        {movies.map(movie => (\n            <Link className='pageItem' key={movie.id} to={`/movie/${movie.id}`}>\n              <img\n                src={movie.poster_path || movie.poster_path ? IMAGE_URL + movie.poster_path : noImage}\n                alt={movie.title || movie.name}\n              />\n              <h2>{movie.title || movie.name}</h2>\n            </Link>\n        ))}\n      </ul>\n\n      <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </section>\n  );\n}\n\nexport default MovieByGenPage;\n\n\n\n"],"names":["_ref","currentPage","totalPages","onPageChange","pageNumbers","start","Math","max","floor","maxPagesToShow","end","pages","i","push","getPageNumbers","_jsxs","className","styles","children","_jsx","disabled","onClick","map","num","length","_useState","useState","_useState2","_slicedToArray","movies","setMovies","dispatch","useDispatch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","pageFromUrl","parseInt","get","_useState3","_useState4","page","setPage","_useState5","_useState6","setTotalPages","params","useParams","genId","genreName","genName","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","allMovies","genreIdNumber","filteredMovies","_context","prev","next","getAll","sent","payload","results","filter","movie","genre_ids","includes","total_pages","t0","console","error","stop","apply","arguments","Link","to","concat","id","src","poster_path","IMAGE_URL","noImage","alt","title","name","Pagination","newPage"],"sourceRoot":""}