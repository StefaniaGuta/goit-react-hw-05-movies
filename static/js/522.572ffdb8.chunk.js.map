{"version":3,"file":"static/js/522.572ffdb8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/Pagination/usePaginatedFetch.js","components/Series/Series.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"active\":\"Pagination_active__DDld0\"};","import React from \"react\";\nimport styles from \"./Pagination.module.css\";\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const maxPagesToShow = 5;\n\n  const getPageNumbers = () => {\n    let start = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n    let end = start + maxPagesToShow - 1;\n\n    if (end > totalPages) {\n      end = totalPages;\n      start = Math.max(1, end - maxPagesToShow + 1);\n    }\n\n    let pages = [];\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={styles.pagination}>\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        ⏮ First\n      </button>\n\n      <button\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        ◀ Prev\n      </button>\n\n      {pageNumbers[0] > 1 && <span>...</span>}\n      {pageNumbers.map((num) => (\n        <button \n          key={num}\n          className={num === currentPage ? styles.active : \"\"}\n          onClick={() => onPageChange(num)}\n        >\n          {num}\n        </button>\n      ))}\n      {pageNumbers[pageNumbers.length - 1] < totalPages && <span>...</span>}\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next ▶\n      </button>\n\n      <button\n        disabled={currentPage === totalPages}\n        onClick={() => onPageChange(totalPages)}\n      >\n        Last ⏭\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport const usePaginatedFetch = (fetchAction, category = \"\", deps = []) => {\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    \n    const fetchData = async () => {\n      try {\n        const response = await dispatch(fetchAction(page, category));\n        setData(response.payload.results || []);\n        setTotalPages(response.payload.total_pages || 1);\n      } catch (error) {\n        console.error(\"Error fetching paginated data:\", error);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, page, fetchAction, category, ...deps]);\n\n  return { data, totalPages, page, setPage };\n};\n","import {\n  airingTodaySeries,\n  popularSeries,\n  onTvSeries, \n  topRatedSeries\n } from '../../redux/series/seriesApi';\nimport React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { usePaginatedFetch } from \"../Pagination/usePaginatedFetch\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport { IMAGE_URL } from \"../../redux/movies/getAPI\";\nimport './Series.css';\n\nconst Series = () => {\n  const location = useLocation();\n  const pathParts = location.pathname.split('/');\n  const categoryFromPath = pathParts[pathParts.length - 1]; \n  const category = location.state?.seriesType || categoryFromPath || \"popularSeries\";\n  \n  const fetchAction =\n    category === \"popularSeries\" ? popularSeries :\n    category === \"airingTodaySeries\" ? airingTodaySeries :\n    category === \"onTvSeries\" ? onTvSeries :\n    category === \"topRatedSeries\" ? topRatedSeries :\n    popularSeries;\n  \n  const { data: series, totalPages, page, setPage } = usePaginatedFetch(fetchAction, category);\n\nreturn (\n  <section className='seriesPage'> \n    <ul className='seriesPageList'>\n      {series.map((s) => (\n          <Link to={`/series/${s.id}`} \n          key={s.id}\n          className=\"seriesPageItem\">\n            <img\n              src={IMAGE_URL + s.poster_path || s.backdrop_path}\n              alt={s.title || s.name}\n            />\n            <h2>{s.title || s.name}</h2>\n          </Link>\n        )\n      )}\n    </ul>\n  \n    <Pagination\n      currentPage={page}\n      totalPages={totalPages}\n      onPageChange={setPage}\n    />\n  \n  </section>\n)\n}\n\nexport default Series;"],"names":["_ref","currentPage","totalPages","onPageChange","pageNumbers","start","Math","max","floor","maxPagesToShow","end","pages","i","push","getPageNumbers","_jsxs","className","styles","children","_jsx","disabled","onClick","map","num","length","usePaginatedFetch","fetchAction","category","arguments","undefined","deps","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","setTotalPages","_useState5","_useState6","page","setPage","dispatch","useDispatch","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","payload","results","total_pages","t0","console","error","stop","apply","concat","_toConsumableArray","_location$state","location","useLocation","pathParts","pathname","split","categoryFromPath","state","seriesType","popularSeries","airingTodaySeries","onTvSeries","topRatedSeries","_usePaginatedFetch","series","s","Link","to","id","src","IMAGE_URL","poster_path","backdrop_path","alt","title","name","Pagination"],"sourceRoot":""}