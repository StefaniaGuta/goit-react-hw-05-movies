{"version":3,"file":"static/js/433.f52398ab.chunk.js","mappings":"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","sources":["components/API/getAPI.jsx","webpack://react-homework-template/./src/components/Home/Home.module.css?58dd","components/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '046ac13b969fd43f0e6a6ee26ddbba59';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getMovies() {\n    const fetchMoviesURL = `${URL}/trending/all/day?language=en-US&api_key=${API_KEY}`;\n    try {\n      const response = await fetch(fetchMoviesURL);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  export async function getMovieDetails(movieId) {\n    const fetchMoviesURL = `${URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(fetchMoviesURL);\n      if (response.status !== 200) {\n        throw new Error('Error fetching credits movies!');\n      }\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  export const getMovieCredits = async movieId => {\n    const fetchMoviesURL = `${URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(fetchMoviesURL);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  export const getMovieReviews = async movieId => {\n    const fetchMoviesURL = `${URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(fetchMoviesURL);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  export const getSearchMovies = async query => {\n    const fetchMoviesURL = `${URL}/search/movie?language=en-US&query=${query}&api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(fetchMoviesURL);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };","// extracted by mini-css-extract-plugin\nexport default {\"trendingContainer\":\"Home_trendingContainer__rsKSK\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getMovies, IMAGE_URL } from '../API/getAPI';\nimport styles from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const response = await getMovies();\n        setMovies(response.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      } finally {\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className={styles.trendingContainer}>\n      <>\n        <h1>In tranding today</h1>\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                <img src={IMAGE_URL + movie.backdrop_path} alt={movie.title || movie.name} />\n                <p>{movie.title || movie.name}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;"],"names":["URL","API_KEY","IMAGE_URL","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee4","fetchMoviesURL","response","data","_context4","prev","next","concat","fetch","sent","json","abrupt","t0","console","log","stop","getMovieDetails","_x","_getMovieDetails","_callee5","movieId","_context5","axios","status","Error","getMovieCredits","_ref","_callee","_context","_x2","getMovieReviews","_ref2","_callee2","_context2","_x3","getSearchMovies","_ref3","_callee3","query","_context3","_x4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","_fetchMovies","results","error","finish","fetchMovies","_jsx","className","styles","children","_jsxs","_Fragment","map","movie","Link","to","id","src","backdrop_path","alt","title","name"],"sourceRoot":""}