{"version":3,"file":"static/js/999.3ca6acee.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchMoviesList/SearchMoviesList.module.css?41bb","components/SearchMoviesList/SearchMoviesList.jsx","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesListContainer\":\"SearchMoviesList_moviesListContainer__CfZhi\",\"moviesList\":\"SearchMoviesList_moviesList__1XiBb\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../../redux/movies/getAPI';\nimport styles from './SearchMoviesList.module.css';\nimport noImage from '../Images/no_image.jpg'\n\nconst SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <div className={styles.moviesListContainer}>\n        {movies.map(movie => (\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            key={movie.id}\n            className={styles.moviesList}\n          >\n            <div>\n              <img src={movie.poster_path || movie.backdrop_path ? \n                IMAGE_URL + movie.poster_path : \n                noImage} \n                alt={movie.title} />\n            </div>\n            <div>\n              <h3>{movie.title}</h3>\n              <p>Release data: {movie.release_date}</p>\n              <p>User score: {movie.vote_average.toFixed(1)} %</p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default SearchMoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"Movies_back__jnmbw\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n//import { useLocation } from 'react-router-dom';\n//import { BackLink } from '../API/Link.styled';\nimport { getSearchMovies } from '../../redux/movies/getAPI';\nimport Loader from '../Loader/Loader';\nimport Searchbar from '../Searchbar/Searchbar';\nimport SearchMoviesList from '../SearchMoviesList/SearchMoviesList';\nimport Notiflix from 'notiflix';\nimport styles from './Movies.module.css';\nimport { useDispatch } from 'react-redux';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [resetQuery, setResetQuery] = useState(false);\n  //const location = useLocation();\n//  const backLinkHref = location.state?.from ?? '/';\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      if (query === '') {\n        setIsLoading(false);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await dispatch(getSearchMovies(query));\n        console.log(\"search\", response.payload)\n        if (response.payload.length === 0) {\n          Notiflix.Notify.failure('No movies found with the given title!');\n        }\n        setMovies(response.payload);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n        Notiflix.Notify.failure('An error occurred while searching for movies!');\n      } finally {\n        setIsLoading(false);\n        setResetQuery(true); \n      }\n    }\n    searchMovies();\n  }, [dispatch, query]);\n\n  const handleSubmit = newQuery => {\n    setMovies([]);\n    setQuery(newQuery);\n    setResetQuery(false);\n  };\n\n  //<BackLink to={backLinkHref}>‚ùÆ Go Back</BackLink>\n  return (\n    <>\n      <div className={styles.back}>\n        <Searchbar onSubmit={handleSubmit} resetQuery={resetQuery} />\n      </div>\n\n      {isLoading ? <Loader /> : <SearchMoviesList movies={movies} />}\n    </>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default Movies;"],"names":["_ref","movies","location","useLocation","_jsx","_Fragment","children","className","styles","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","backdrop_path","IMAGE_URL","noImage","alt","title","release_date","vote_average","toFixed","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","query","setQuery","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","resetQuery","setResetQuery","dispatch","useDispatch","useEffect","searchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","abrupt","getSearchMovies","sent","console","log","payload","length","Notiflix","t0","error","finish","stop","apply","arguments","Searchbar","onSubmit","newQuery","Loader","SearchMoviesList"],"sourceRoot":""}