{"version":3,"file":"static/js/69.dcbcb967.chunk.js","mappings":"mSA2EA,EApEc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,CAACC,MAAO,GAAIC,SAAU,KAAIC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApDM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MAOXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMpB,GAASqB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,GAAC,CAAC,EAAGd,KAAQ,KAAD,EAE/B,OAFZS,EAAQC,EAAAK,KALhBd,EAAQ,CAACL,MAAO,GAAIC,SAAU,KAO5BK,EAAS,SAASQ,EAAAM,OAAA,SACXP,EAASQ,SAAO,OAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEvBS,QAAQC,IAAGV,EAAAQ,IAAG,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,kBAEjB,kBATiB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAWlB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,eAAcC,SAAA,EAE/BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWC,SAAA,CAAC,WAChBC,EAAAA,EAAAA,KAAA,SAAS,yEAIlBA,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACPC,cAAe,CACbjC,MAAM,GACNC,SAAU,IAEZiC,SAAU1B,EAAasB,UAErBF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACN,UAAU,YAAWC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAACC,GAAG,QACRC,KAAK,OACLT,UAAU,QACVU,UAAQ,EACRC,YAAY,0BACZC,MAAOrC,EAAKJ,MACZ0C,SAAU,SAACC,GAAC,OAAKtC,GAAOa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAId,GAAI,IAAEJ,MAAO2C,EAAEC,OAAOH,QAAQ,QAGhEb,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,aAELC,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAACC,GAAG,WACRC,KAAK,OACLT,UAAU,QACVW,YAAY,sBACZC,MAAOrC,EAAKH,SACZyC,SAAU,SAACC,GAAC,OAAKtC,GAAOa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAId,GAAI,IAAEH,SAAU0C,EAAEC,OAAOH,QAAQ,EAC/DF,UAAQ,QAGZR,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAC,YACtBC,EAAAA,EAAAA,KAAA,KAAGc,KAAK,eAAcf,SAAC,gCAMjC,C","sources":["components/Login/Login.jsx"],"sourcesContent":["import { Form, Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({email: '', password: ''});\n  const navigate = useNavigate();\n  \n  \n  const resetForm = () => {\n    setForm({email: '', password: ''})\n  }\n  \n  const handleSubmit = async() => {\n    try{\n      const response = await dispatch(logIn({...form}));\n      resetForm();\n      navigate('/home');\n      return response.payload\n    } catch(e) {\n      console.log(e)\n    }\n  }\n  \n  return (\n    <section className='loginSection'>\n\n      <p className='helloText'>\n        Hello! <br></br>\n        Please log in or create an account\n        to use the features of this app\n      </p>\n      <Formik\n      initialValues={{\n        email:'',\n        password: ''\n      }}\n      onSubmit={handleSubmit}\n      >\n        <Form className=\"loginForm\">\n          <label>\n            Email*\n            <Field id=\"email\"\n              type=\"text\"\n              className=\"input\"\n              required\n              placeholder=\"Enter your email adress\"\n              value={form.email}\n              onChange={(e) => setForm({ ...form, email: e.target.value })}\n            />\n          </label>\n          <label>\n            Password*\n            <Field id=\"password\"\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter your password\"\n              value={form.password}\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\n              required\n            />\n          </label>\n          <button type='submit'>Submit</button>\n          <a href='registration'>or create an account</a>\n        </Form>\n      </Formik>\n    </section>\n  )\n\n}\n\nexport default LogIn;"],"names":["dispatch","useDispatch","_useState","useState","email","password","_useState2","_slicedToArray","form","setForm","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","logIn","_objectSpread","sent","abrupt","payload","t0","console","log","stop","apply","arguments","_jsxs","className","children","_jsx","Formik","initialValues","onSubmit","Form","Field","id","type","required","placeholder","value","onChange","e","target","href"],"sourceRoot":""}